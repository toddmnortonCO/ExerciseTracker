{"version":3,"sources":["redux/reducer.js","Components/Landing/Landing.js","Components/Header/Header.js","Components/Dashboard/Dashboard.js","Components/About/About.js","Components/Donate/Donate.js","routes.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["initialState","user","GET_USER","CLEAR_USER","Landing","props","handleInput","e","setState","target","name","value","handleRegister","preventDefault","state","email","password","axios","post","then","res","getUser","data","history","push","catch","err","console","log","handleLogin","class","this","placeholder","onChange","onClick","Component","connect","reduxState","userObj","type","payload","Header","handleLogout","get","req","session","destroy","status","send","to","Dashboard","val","getExercises","user_id","exercises","addExercise","activity","duration","distance","summary","editExercise","exercise_id","put","deleteExercise","delete","getComments","exercise_tracker_user","addComment","comments","deleteComment","comment_id","mappedExercises","map","exercise","i","className","About","stripePromise","loadStripe","ProductDisplay","handleClick","src","alt","id","role","Message","message","exact","path","component","useState","setMessage","useEffect","query","URLSearchParams","window","location","search","event","a","stripe","fetch","method","response","json","redirectToCheckout","sessionId","error","App","routes","Boolean","hostname","match","createStore","action","Router","BrowserRouter","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4165bb6e.chunk.js","sourcesContent":["const initialState = {\r\n    user: {}\r\n}\r\n\r\nconst GET_USER = 'GET_USER',\r\n    CLEAR_USER = 'CLEAR_USER';\r\n\r\nexport function getUser(userObj) {\r\n    return {\r\n        type: GET_USER,\r\n        payload: userObj\r\n    }\r\n}\r\n\r\nexport function clearUser() {\r\n    return {\r\n        type: CLEAR_USER,\r\n        payload: {}\r\n    }\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_USER:\r\n            return { ...state, user: payload };\r\n        case CLEAR_USER:\r\n            return { ...state, user: payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\nimport React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { getUser } from '../../redux/reducer';\r\nimport './Landing.css';\r\n\r\nclass Landing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleRegister = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state\r\n      axios\r\n        .post(\"/api/register\", { email, password })\r\n        .then((res) => {\r\n          this.props.getUser(res.data);\r\n          this.props.history.push(\"/dashboard\");\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } \r\n  \r\n\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n      axios\r\n      .post(\"/api/login\", { email, password })\r\n      .then((res) => {\r\n        this.props.getUser(res.data);\r\n        this.props.history.push(\"/dashboard\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div class='Landing' >\r\n        <h1 name='App Title'>Get Swoll Exercise Tracker</h1>\r\n        <h2>Please Login or Register</h2>\r\n        <input\r\n          value={this.state.email}\r\n          name='email'\r\n          placeholder=\"Email\"\r\n          onChange={(e) => this.handleInput(e)}\r\n        />\r\n        <input\r\n          value={this.state.password}\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          onChange={(e) => this.handleInput(e)}\r\n        />\r\n        <button onClick={this.handleRegister}>Register</button>\r\n        <button onClick={this.handleLogin}>Login</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (reduxState) => reduxState;\r\n\r\nexport default connect(mapStateToProps, { getUser })(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n\r\n  handleLogout = (e) => {\r\n    axios\r\n    .get('/api/logout', (req, res) => {\r\n      req.session.destroy();\r\n      res.status(200).send(console.log('user has been logged out'))\r\n  });\r\n  // this.props.history.push(\"/\");\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <section class=\"Header\" >\r\n        <p>\r\n          <Link to='/dashboard'>Dashboard</Link>\r\n        </p>\r\n        <p>\r\n          <Link to='/about'>About</Link>\r\n        </p>\r\n        <p>\r\n          <Link to='/donate'>Donate</Link>\r\n        </p>\r\n        {/* <p>\r\n          <Link to='/contact'>Contact Me</Link>\r\n        </p> */}\r\n        <button onClick={this.handleLogout}>Logout</button>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Header;\r\n\r\n\r\n// add Links to other pages in the app","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from '../Header/Header';\r\nimport './Dashboard.css'\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      exercises: [],\r\n      user_id: \"\",\r\n      activity: \"\",\r\n      duration: \"\",\r\n      distance: \"\",\r\n      summary: \"\",\r\n      exercise_id: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getExercises();\r\n    if (!this.props.user.email) {\r\n      this.props.history.push('/');\r\n    }\r\n  }\r\n\r\n  handleInput = (e, val) => {\r\n    console.log(e.target)\r\n    this.setState({[e.target.name]: val})\r\n  }\r\n\r\n  getExercises = () => {\r\n    axios.get(`/api/exercises/${this.props.user.user_id}`)\r\n      .then(res => this.setState({ exercises: res.data }))\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  addExercise = () => {\r\n    console.log(this.props);\r\n    axios.post(`/api/exercises/`, {\r\n      activity: this.state.activity,\r\n      duration: this.state.duration,\r\n      distance: this.state.distance,\r\n      summary: this.state.summary\r\n    })\r\n      .then(() => {this.getExercises()})\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  editExercise = (exercise_id) => {\r\n    axios.put(`/api/exercises/${exercise_id}`)\r\n      .then(() => { this.getExercises() })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  deleteExercise = (exercise_id) => {\r\n    //can't pass in a body into a delete request\r\n    axios.delete(`/api/exercises/${exercise_id}`\r\n    )\r\n      .then(() => { this.getExercises() })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  getComments = () => {\r\n      axios.get(`/api/comments/${this.props.exercise_tracker_user.user_id}`)\r\n  }\r\n\r\n  addComment = () => {\r\n    axios.post(`api/comments/`, {\r\n      // exercise_id: this.props.exercise_id,\r\n      comments: this.props.comments\r\n    })\r\n  }\r\n\r\n  deleteComment = (comment_id) => {\r\n    axios.delete(`/api/comments/${comment_id}`)\r\n      .then(() => { this.getComments() })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  render() {\r\n    const mappedExercises = this.state.exercises.map((exercise, i) => (\r\n      <div class=\"outerDiv\" key={exercise.exercise_id} >\r\n        <p>Exercise: {exercise.activity}</p>\r\n        <p>Distance: {exercise.distance}mi</p>\r\n        <p>Duration: {exercise.duration}</p>\r\n        <p>Summary: {exercise.summary}</p>\r\n        <button onClick={() => this.deleteExercise(exercise.exercise_id)}>Delete</button>\r\n        {/* <button onClick={() => this.editExercise(exercise.exercise_id)}>Edit</button> */}\r\n      </div>\r\n  ))\r\n    return (\r\n      <div className=\"Dashboard\">\r\n        <Header />\r\n        <h1 className=\"HeaderOne\">Hello! Welcome to Your Dashboard.</h1>\r\n        <h2 className=\"HeaderTwo\">Add Your Exercise Here</h2>\r\n        <input\r\n          placeholder=\"Add Exercise\"\r\n          onChange={(e) => this.handleInput(e, e.target.value)}\r\n          value={this.props.activity}\r\n          name=\"activity\"\r\n        />\r\n        <input\r\n          placeholder=\"Add Duration\"\r\n          onChange={(e) => this.handleInput(e, e.target.value)}\r\n          value={this.props.duration}\r\n          name=\"duration\"\r\n        />\r\n        <input\r\n          placeholder=\"Add Distance\"\r\n          onChange={(e) => this.handleInput(e, e.target.value)}\r\n          value={this.props.distance}\r\n          name=\"distance\"\r\n        />\r\n        <input\r\n          placeholder=\"Add Summary\"\r\n          onChange={(e) => this.handleInput(e, e.target.value)}\r\n          value={this.props.summary}\r\n          name=\"summary\"\r\n        />\r\n        <button onClick={this.addExercise}>Add Workout</button>\r\n        <h2>Your Recent Workouts</h2>\r\n        <div>{mappedExercises}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (reduxState) => reduxState;\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import React, { Component } from 'react'\r\nimport Header from '../Header/Header'\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n          <div>\r\n            <Header />\r\n            <h1>About the App Creator</h1>\r\n            <h2>Todd Norton</h2>\r\n            <p></p>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\n// Make sure to call `loadStripe` outside of a component’s render to avoid\r\n// recreating the `Stripe` object on every render.\r\nconst stripePromise = loadStripe(\"pk_test_51Hj6yjGJg6htRBctXyv7dHO8CAEBNpXZU9jsINlCXVXiChCABOAClWvlT3uqEdOTIRm5x9UAX5nIqCxSCWzStOtJ00D1aPqOrk\");\r\nconst ProductDisplay = ({ handleClick }) => (\r\n  <section>\r\n    <div className=\"product\">\r\n      <img\r\n        src=\"https://i.imgur.com/EHyR2nP.png\"\r\n        alt=\"The cover of Donations\"\r\n      />\r\n      <div className=\"description\">\r\n        <h3>Donate</h3>\r\n        <h5>$1.00</h5>\r\n      </div>\r\n    </div>\r\n    <button id=\"checkout-button\" role=\"link\" onClick={handleClick}>\r\n      Checkout\r\n    </button>\r\n  </section>\r\n);\r\nconst Message = ({ message }) => (\r\n  <section>\r\n    <p>{message}</p>\r\n  </section>\r\n);\r\nexport default function App() {\r\n  const [message, setMessage] = useState(\"\");\r\n  useEffect(() => {\r\n    // Check to see if this is a redirect back from Checkout\r\n    const query = new URLSearchParams(window.location.search);\r\n    if (query.get(\"success\")) {\r\n      setMessage(\"Order placed! You will receive an email confirmation.\");\r\n    }\r\n    if (query.get(\"canceled\")) {\r\n      setMessage(\r\n        \"Order canceled -- continue to shop around and checkout when you're ready.\"\r\n      );\r\n    }\r\n  }, []);\r\n  const handleClick = async (event) => {\r\n    const stripe = await stripePromise;\r\n    const response = await fetch(\"/create-session\", {\r\n      method: \"POST\",\r\n    });\r\n    const session = await response.json();\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const result = await stripe.redirectToCheckout({\r\n      sessionId: session.id,\r\n    });\r\n    if (result.error) {\r\n      // If `redirectToCheckout` fails due to a browser or network\r\n      // error, display the localized error message to your customer\r\n      // using `result.error.message`.\r\n    }\r\n  };\r\n  return message ? (\r\n    <Message message={message} />\r\n  ) : (\r\n    <ProductDisplay handleClick={handleClick} />\r\n  );\r\n}","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Landing from './Components/Landing/Landing';\r\nimport Dashboard from './Components/Dashboard/Dashboard';\r\nimport About from \"./Components/About/About\";\r\nimport Donate from './Components/Donate/Donate';\r\n// import Contact from \"./Components/Contact/contact\";\r\n\r\n\r\nexport default (    \r\n  <Switch>\r\n    <Route exact path=\"/\" component={Landing} />\r\n    {/* <Header /> */}\r\n    <Route path=\"/Dashboard\" component={Dashboard} />\r\n    <Route path=\"/About\" component={About} />\r\n    <Route path=\"/Donate\" component={Donate} />\r\n    {/* <Route path='/contact' component={Contact} /> */}\r\n  </Switch>\r\n);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport routes from './routes';\r\n// import Header from './Components/Header/Header';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {routes}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nexport default createStore(reducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\nconst Router = process.env.NODE_ENV === 'development' ? HashRouter : BrowserRouter;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}